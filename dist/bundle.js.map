{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","getUsers","deleteUser","baseUrl","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","getQueryStringParameterByName","fetch","then","onSuccess","onError","id","request","Request","method","del","response","json","error","console","log","_api_userApi__WEBPACK_IMPORTED_MODULE_0__","result","usersBody","forEach","user","userId","firstName","lastName","email","global","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","attributes","row","parentNode","removeChild","g","this","Function","e","self","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","Headers","append","normalizeName","normalizeValue","list","map","push","values","getAll","has","set","callback","thisArg","getOwnPropertyNames","keys","items","iteratorFor","entries","iterator","methods","clone","Body","Response","_bodyInit","status","statusText","headers","type","redirectStatuses","redirect","indexOf","RangeError","input","init","Promise","resolve","reject","isPrototypeOf","xhr","XMLHttpRequest","onload","options","responseURL","test","getAllResponseHeaders","getResponseHeader","body","responseText","onerror","TypeError","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","toLowerCase","next","shift","done","undefined","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","toString","ArrayBuffer","Error","rejected","text","readAsText","decode","JSON","parse","upcased","toUpperCase","referrer","form","trim","split","bytes","join","head","header","bodyInit","ok"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import 'whatwg-fetch';\r\nimport getBaseUrl from './baseUrl';\r\n\r\nconst baseUrl = getBaseUrl();\r\n\r\nexport function getUsers() {\r\n  return get('users');\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return del(`users/${id}`);\r\n}\r\n\r\nfunction get(url) {\r\n  return fetch(baseUrl + '/' + url).then(onSuccess, onError);\r\n}\r\n\r\nfunction del(url){\r\n  const request = new Request(baseUrl + '/' + url, {\r\n    method: 'DELETE'\r\n  });\r\n  return fetch(request).then(onSuccess, onError);\r\n}\r\n\r\nfunction onSuccess(response) {\r\n  return response.json();\r\n}\r\n\r\nfunction onError(error) {\r\n  console.log(error); // eslint-disable-line no-console\r\n}","export default function getBaseUrl(){ \r\n    return  getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001': 'http://localhost:3000';\r\n}\r\n\r\n\r\nfunction getQueryStringParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }","\r\nimport {getUsers, deleteUser} from './api/userApi';\r\n\r\n// Populate table of users via API call.\r\ngetUsers().then(result => {\r\n  let usersBody = \"\"; \r\n  result.forEach(user => {\r\n    usersBody+= `<tr>\r\n      <td><a href=\"#\" data-id=\"${user.userId}\" class=\"deleteUser\">Delete</a></td>\r\n      <td>${user.userId}</td>\r\n      <td>${user.firstName}</td>\r\n      <td>${user.lastName}</td>\r\n      <td>${user.email}</td>\r\n      </tr>`\r\n  });\r\n\r\n  global.document.getElementById('users').innerHTML = usersBody;\r\n \r\n\r\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\r\n\r\n  // Must use array.from to create a real array from a DOM collection\r\n  // getElementsByClassname only returns an \"array like\" object\r\n  Array.from(deleteLinks, link => {\r\n    link.onclick = function(event) {\r\n      const element = event.target;\r\n      event.preventDefault();\r\n      deleteUser(element.attributes[\"data-id\"].value);\r\n      const row = element.parentNode.parentNode;\r\n      row.parentNode.removeChild(row);\r\n    };\r\n  });\r\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"],"sourceRoot":""}